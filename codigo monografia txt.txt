# Codigo de la monografia
library(gamlss)
library(moments)
data=read.csv(file.choose(),header = TRUE,sep = ",")
attach(data)
str(data)

x=perdida/1000000  #la variable perdida la estoy redefiniendo y volviendo en Mlls
summary(x)    #resumen estadistico express

medidas<-function(x) {
Media<-round(mean(x),3)
Min<-round(min(x),3)
Máx<-round(max(x),3)
Desviacion<-round(sd(x),3)
P25<-round(quantile(x,0.25),3)
P50<-round(quantile(x,0.5),3)
P75<-round(quantile(x,0.75),3)
P95<-round(quantile(x,0.95),3)
P99<-round(quantile(x,0.99),3)

return(data.frame(Media,Min,Máx,Desviacion,P25,P50,P75,P95,P99))

}

medidas(x)

medidas2<-function(x) {

skw<-skewness(x,na.rm = FALSE)  
kurt<-kurtosis(x,na.rm = FALSE)
skwP95<-skewness(x[x<quantile(x,0.95)],na.rm = FALSE)
kurtP95<-kurtosis(x[x<quantile(x,0.95)],na.rm = FALSE)
skwP99<-skewness(x[x<quantile(x,0.99)],na.rm = FALSE)
kurtP99<-kurtosis(x[x<quantile(x,0.99)],na.rm = FALSE)
skwP999<-skewness(x[x<quantile(x,0.999)],na.rm = FALSE)
kurtP999<-kurtosis(x[x<quantile(x,0.999)],na.rm = FALSE)

return(data.frame(skw,kurt,skwP95,kurtP95,skwP99,kurtP99,skwP999,kurtP999))
}

medidas2(x)


#Gráfico de perdidas totales a diferentes percentiles

win.graph()
par(mfrow = c(1, 3))
boxplot(x[x<quantile(x,0.95)],main="Boxplot Pérdidas al P95",
        ylab = "Montos Variable pérdida")
boxplot(x[x<quantile(x,0.99)],main="Boxplot Pérdidas al P99",
        ylab = "Montos Variable pérdida")
boxplot(x[x<quantile(x,0.999)],main="Boxplot Pérdidas al P99.9",
        ylab = "Montos Variable pérdida")

win.graph()
qqnorm(x,main="Prueba de normalidad variable Pérdida",
       xlab="Cuantiles teóricos",ylab="Cuantiles muestrales")
qqline(x,col="blue",lwd=2)
shapiro.test(x)$p.value
legend("topleft",y=null,title="Valor P Shapiro Test",shapiro.test(x)$p.value)


#Definición perdidas a diferentes percentiles

y=x[x<quantile(x,0.95)]
z=x[x<quantile(x,0.999)]

#Histograma de pérdidas a diferentes percentiles

win.graph()
par(mfrow = c(4, 1))

hist(x,freq = FALSE,breaks = 250,
     main="Histograma  pérdidas",
     ylab = "Frecuencias",xlab = "Variable pérdida")
lines(density(x),na.rm=TRUE,col="blue",lwd=2)
hist(x[x<quantile(x,0.999)],freq = FALSE,breaks = 250,
     main="Histograma  pérdidas al P99.9",
     ylab = "Frecuencias",xlab = "Monto en millones de pesos")
lines(density(x[x<quantile(x,0.999)]),na.rm=TRUE,col="blue",lwd=2)
hist(x[x<quantile(x,0.99)],freq = FALSE,breaks = 250,
     main="Histograma pérdidas al P99",
     ylab = "Frecuencias",xlab = "Monto en millones de pesos")
lines(density(x[x<quantile(x,0.99)]),na.rm=TRUE,col="blue",lwd=2)
hist(x[x<quantile(x,0.95)],freq = FALSE,breaks = 250,
     main="Histograma pérdidas al P95",
     ylab = "Frecuencias",xlab = "Monto en millones de pesos")
lines(density(x[x<quantile(x,0.95)]),na.rm=TRUE,col="blue",lwd=2)

#Ajustes de la variable pérdidas a diferentes percentiles

ajustex=fitDist(x,type = "realplus")
ajustey=fitDist(y,type = "realplus")
ajustez=fitDist(z,type = "realplus")

ajustex
ajustey
ajustez

ajustex$fits
ajustey$fits
ajustez$fits

#Tabla de Número de eventos en cada año

table(año)
mean(table(año))

#Simulación de las variables por sus respectivas fdps

xajust=rBCT(1000000,1.044,0.2766,0.01303,2.805) #Box Cox t
yajust=rBCPEo(1000000,1.073,0.1943,0.1343,0.9788) # BCPEo
zajust=rBCPEo(1000000,1.037,0.3319,0.002123,0.604) # BCPEo

mean(xajust)
median(xajust)

mean(yajust)
median(yajust)

mean(zajust)
median(zajust)

#simulación poisson

freqprom<-rpois(100000,1080)
freqmax<-rpois(100000,1352)

#Gráfico de densidades de variables simuladas.

win.graph()
par(mfrow = c(3, 2))

plot(density(xajust[xajust<quantile(xajust,0.999)]),
      main="Simulación variable x impacto (pérdidas)
     Distribución BCT",ylab="Densidad",xlab="cifras en millones de pesos",
     lwd=3,xlim=range(0:25))

plot(density(yajust),main="Simulación variable y impacto (pérdidas)
     Distribución BCPEo",ylab="Densidad",
     xlab="cifras en millones de pesos",
     lwd=3,xlim=range(0:25))

plot(density(zajust),main="Simulación variable z impacto (pérdidas)
     Distribución BCPEo",ylab="Densidad",
     xlab="cifras en millones de pesos",
     lwd=3,xlim=range(0:25))

plot(density(freqprom),
     main="Simulación variable frecuencia 
     Distribución Poisson(1080)",ylab="Densidad",
     xlab="Número de eventos posibles",lwd=3)

plot(density(freqmax),
      main="Simulación variable frecuencia 
     Distribución Poisson(1352)",ylab="Densidad",
     xlab="Número de eventos posibles",lwd=3)



#salidas finales

ensayo1e=quantile(xajust,0.5)*quantile(freqprom,0.5)
ensayo1=quantile(xajust,0.95)*quantile(freqprom,0.95)
ensayo1p=quantile(xajust,0.99)*quantile(freqprom,0.99)
s1=c(ensayo1e,ensayo1,ensayo1p)   #Escenario 1

ensayo2e=quantile(yajust,0.5)*quantile(freqprom,0.5)
ensayo2=quantile(yajust,0.95)*quantile(freqprom,0.95)
ensayo2p=quantile(yajust,0.99)*quantile(freqprom,0.99)
s2=c(ensayo2e,ensayo2,ensayo2p)   #Escenario 2

ensayo3e=quantile(zajust,0.5)*quantile(freqprom,0.5)
ensayo3=quantile(zajust,0.95)*quantile(freqprom,0.95)
ensayo3p=quantile(zajust,0.99)*quantile(freqprom,0.99)
s3=c(ensayo3e,ensayo3,ensayo3p)   #Escenario 3

ensayo11e=quantile(xajust,0.5)*quantile(freqmax,0.5)
ensayo11=quantile(xajust,0.95)*quantile(freqmax,0.95)
ensayo11p=quantile(xajust,0.99)*quantile(freqmax,0.99)
s11=c(ensayo11e,ensayo11,ensayo11p)   #Escenario 4

ensayo22e=quantile(yajust,0.5)*quantile(freqmax,0.55)
ensayo22=quantile(yajust,0.95)*quantile(freqmax,0.95)
ensayo22p=quantile(yajust,0.99)*quantile(freqmax,0.99)
s22=c(ensayo22e,ensayo22,ensayo22p)   #Escenario 5

ensayo33e=quantile(zajust,0.5)*quantile(freqmax,0.5)
ensayo33=quantile(zajust,0.95)*quantile(freqmax,0.95)
ensayo33p=quantile(zajust,0.99)*quantile(freqmax,0.99)
s33=c(ensayo33e,ensayo33,ensayo33p)   #Escenario 6


s1
s2
s3
s11
s22
s33

#### 

### gráfico BCPE teoria

bcoxpe3=rBCPEo(1000000,10,0.1,1,3)
bcoxpe25=rBCPEo(1000000,10,0.1,1,2.5)
bcoxpe2=rBCPEo(1000000,10,0.1,1,2)
bcoxpe15=rBCPEo(1000000,10,0.1,1,1.5)

win.graph()
par(mfrow = c(2, 2))
plot(density(bcoxpe3),main="",ylab = "fdp, f(x)",xlab="(a)")
plot(density(bcoxpe25),main="",ylab = "fdp, f(x)",xlab="(b)")
plot(density(bcoxpe2),main="",ylab = "fdp, f(x)",xlab="(c)")
plot(density(bcoxpe15),main="",ylab = "fdp, f(x)",xlab="(d)")


### gráfico BCT teoria

bctu1=rBCT(1000000,8,0.15,1,10)
bctu2=rBCT(1000000,10,0.15,1,10)
bctu3=rBCT(1000000,12,0.15,1,10)

bcts1=rBCT(1000000,10,0.1,1,10)
bcts2=rBCT(1000000,10,0.15,1,10)
bcts3=rBCT(1000000,10,0.20,1,10)


bctuv1=rBCT(1000000,10,0.15,-5,10)
bctuv2=rBCT(1000000,10,0.15,1,10)
bctuv3=rBCT(1000000,10,0.15,5,10)

bctt1=rBCT(1000000,10,0.15,1,1)
bctt2=rBCT(1000000,10,0.15,1,10)
bctt3=rBCT(1000000,10,0.15,1,40)

win.graph()
par(mfrow = c(2, 2))
plot(density(bctu1),main="",ylab = "fdp, f(x)",xlab="(a)",xlim=c(0,30),ylim=c(0,0.35))
lines(density(bctu2),type="s",col="blue")
lines(density(bctu3),type="S",col="red")
plot(density(bcts1),main="",ylab = "fdp, f(x)",xlab="(b)",xlim=c(0,30),ylim=c(0,0.4))
lines(density(bcts2),type="s",col="blue")
lines(density(bcts3),type="S",col="red")
plot(density(bctuv1),main="",ylab = "fdp, f(x)",xlab="(c)",xlim=c(0,30),ylim=c(0,0.6))
lines(density(bctuv2),type="s",col="blue")
lines(density(bctuv3),type="S",col="red")
plot(density(bctt1),main="",ylab = "fdp, f(x)",xlab="(d)",xlim=c(0,30),ylim=c(0,0.3))
lines(density(bctt2),type="s",col="blue")
lines(density(bctt3),type="S",col="red")
